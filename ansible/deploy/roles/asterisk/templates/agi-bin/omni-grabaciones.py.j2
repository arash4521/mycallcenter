{% if is_docker == "true" or asterisk_host is defined %}
#! /usr/bin/python3
{% else %}
#!{{ install_prefix }}virtualenv/bin/python3
{% endif %}
# -*- coding: utf-8 -*-

# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.

# Este script se ejecuta como AGI desde 'oml_extensions_sub.conf' para insertar una instancia del
# modelo grabación según se requiera en el sistema

import os
import psycopg2
import sys

from socket import setdefaulttimeout
from utiles import write_time_stderr

ASTERISK_LOCATION = os.getenv('ASTERISK_LOCATION')
GRABACIONES_AGI_LOG = '{0}/var/log/asterisk/grabaciones-agi-errors.log'.format(ASTERISK_LOCATION)

if os.path.exists(GRABACIONES_AGI_LOG):
    append_write = 'a' # append if already exists
else:
    append_write = 'w' # make a new file if not

sys.stderr = open(GRABACIONES_AGI_LOG, append_write)

setdefaulttimeout(30)

# obtenemos los valores de las variables de configuración necesarias
OML_DB_HOST = os.getenv('PGHOST')
OML_DB_NAME = os.getenv('PGDATABASE')
OML_DB_USER = os.getenv('PGUSER')

tipo_llamada = sys.argv[1]
id_cliente = sys.argv[2]
tel_cliente = sys.argv[3]
grabacion = sys.argv[4]
agente_id = sys.argv[5]
campana = sys.argv[6]
fecha = sys.argv[7]
callid = sys.argv[8]
duracion = sys.argv[9]

# conectando con BD
try:
    conn = psycopg2.connect(
        host=OML_DB_HOST, dbname=OML_DB_NAME, user=OML_DB_USER)
except Exception as e:
    write_time_stderr("Unable to connect to the database due to {0}".format(e))
    raise e

# se realiza la inserción de los parámetros de la grabación en la BD
query = ("INSERT INTO ominicontacto_app_grabacion (fecha,tipo_llamada,id_cliente,tel_cliente,"
         "grabacion,agente_id,campana_id,callid,duracion) VALUES ('{0}','{1}','{2}','{3}','{4}','{5}',"
         "'{6}','{7}','{8}');".format(
             fecha, tipo_llamada, id_cliente, tel_cliente, grabacion, agente_id, campana, callid,
             duracion))
cur = conn.cursor()
try:
    cur.execute(query)
except Exception as e:
    write_time_stderr("Unable to insert log in database due to {0}".format(e))
    raise e
conn.commit()

conn.close()
