# Copyright (C) 2018 Freetech Solutions

# This file is part of OMniLeads

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see http://www.gnu.org/licenses/.
#
---

# Es necesario crear el directorio donde va a estar el pid de kamailio
- name: Creation of kamamailio run directories
  file: "path={{ item }} state=directory mode=0755"
  with_items:
      - "{{ kamailio_location }}/run/"
      - "{{ kamailio_location }}/run/kamailio/"
  become: true
  become_method: sudo

# Se crea el directorio y el archivo para el log
- name: Create kamailio.log file and directory
  file: path=/var/log/kamailio/ state=directory mode=0755
  become: true
  become_method: sudo

- file: path=/var/log/kamailio/kamailio.log state=touch mode=0755
  become: true
  become_method: sudo

# Se hace el template kamctlrc a /opt/omnileads/kamailio/etc/kamailio
# Ver archivo kamctlrc para mas info
- name: Copy of oml/kamailio-files to the desired destinations
  template: src=templates/etc/kamctlrc dest={{ kamailio_location }}/etc/kamailio/kamctlrc mode=755 owner={{ usuario }} group={{ usuario }}

# Se cre el archivo kamailio en /etc/default este archivo contiene variables que va a usar systemctl para levantar kamailio
- name: Creation of kamailio file in /etc/default
  template: src=templates/systemd/kamailio.j2 dest=/etc/default/kamailio owner=root group=root mode=755

# Se crea el archivo de systemd para el servicio kamailio
- name: Creation of kamailio.service file in systemd
  template: src=templates/systemd/kamailio.service.j2 dest=/etc/systemd/system/kamailio.service owner=root group=root mode=650
  when: is_docker.stdout != "docker"

- name: Creation of kamailio.service file in systemd (docker container)
  template: src=templates/init.d/kamailio dest=/etc/init.d/kamailio owner=root group=root mode=650
  when: is_docker.stdout == "docker"

- name: Change owner of kamailio directory
  file: state=directory path={{ kamailio_location }} owner={{ usuario }} group={{ usuario }} recurse=yes
  become: true
  become_method: sudo

# Se crea el archivo kamailio-local, Este archivo contiene las variables que usa el kamailio.cfg
- name: Creation of kamailio-local.cfg file
  template: src=templates/etc/kamailio-local.cfg dest={{ kamailio_location }}/etc/kamailio/ owner={{ usuario }} group={{ usuario }}
  tags: ['changenetwork','postinstall']
  become: true
  become_method: sudo

# Se borra el kamailio.cfg que se crea por default a  la  hora de instalar
- name: Erase of default kamailio.cfg file
  shell: rm -rf {{ kamailio_location }}/etc/kamailio/kamailio.cfg

# Se linkea el kamailio.cfg de omnileads a su ubicacion /etc/kamailio
- name: Link kamailio.cfg repo file to {{ kamailio_location }} (aio)
  file: state=link src={{ install_prefix }}ominicontacto/ominicontacto_voip/kamailio-files/kamailio.cfg dest={{ kamailio_location }}/etc/kamailio/kamailio.cfg force=true owner={{ usuario }} group={{ usuario }} mode=644
  become: true
  become_method: sudo
  when: cluster == 0

# Se copia si es un cluster
- name: Copy of the kamailio.cfg file (cluster)
  copy: src=/var/tmp/ominicontacto-build/ominicontacto/ominicontacto_voip/kamailio-files/kamailio.cfg dest={{ kamailio_location }}/etc/kamailio/ owner={{ usuario }} group={{ usuario }}
  when: cluster != 0 and is_docker.stdout != "docker"
  tags: postinstall

# Linkeamos dos binarios de kamailio que son necesarios para el buen funcionamiento del proceso de autenticacion
- name: Link kamcmd binarie to /usr/sbin
  file: state=link src={{ kamailio_location }}/sbin/kamcmd dest=/usr/sbin/kamcmd mode=755 force=true

- name: Link kamctl binarie to /usr/sbin
  file: state=link src={{ kamailio_location }}/sbin/kamctl dest=/usr/sbin/kamctl mode=755 force=true

# Habilitamos y empezamos redis. Redis es necesario para rtpengine y para django-defender
- name: Modify bind port for redis
  lineinfile: path=/etc/redis/redis.conf regexp=^bind line="bind 127.0.0.1" state=present
  when: is_docker.stdout == "docker"

# Habilitamos y empezamos redis. Redis es necesario para rtpengine y para django-defender
- name: Start and enable redis service
  service: name=redis state=restarted enabled=yes
  become: yes
  become_method: sudo
  when: is_docker.stdout != "docker"

# Habilitamos y empezamos redis. Redis es necesario para rtpengine y para django-defender
- name: Start and enable redis service (container)
  service: name=redis-server state=restarted enabled=yes
  become: yes
  become_method: sudo
  when: is_docker.stdout == "docker"

# Restarteo kamailio
- name: Restart kamailio service
  systemd: name=kamailio state=restarted enabled=yes daemon_reload=yes
  tags: ['changenetwork','postinstall']
  become: true
  become_method: sudo
  when: is_docker.stdout != "docker"

# Se restartea rsyslog se habilita kamailio y se hace el daemon-reload.
- name: Restart de rsyslog
  service: name=rsyslog.service state=restarted enabled=yes
  tags: ['changenetwork','postinstall']
  when: is_docker.stdout != "docker"
  become: true
  become_method: sudo
